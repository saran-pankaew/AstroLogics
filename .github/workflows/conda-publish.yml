name: Build and Publish to Conda

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-conda:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: '3.13'
        channels: conda-forge,defaults
        channel-priority: true
    
    - name: Install conda-build
      shell: bash -l {0}
      run: |
        conda install conda-build anaconda-client conda-verify
    
    - name: Build conda package
      shell: bash -l {0}
      run: |
        conda build -c colomoto conda/ --output-folder ./conda-dist
    
    - name: Upload conda artifacts
      uses: actions/upload-artifact@v4
      with:
        name: conda-packages-${{ matrix.os }}
        path: conda-dist/

  test-conda:
    needs: build-conda
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    
    steps:
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,defaults
        channel-priority: true
    
    - name: Download conda artifacts
      uses: actions/download-artifact@v4
      with:
        name: conda-packages-${{ matrix.os }}
        path: conda-dist/
    
    - name: Install and test package
      shell: bash -l {0}
      run: |
        conda install -c colomoto -c conda-dist
        python -c "import astrologics; print('Import successful')"
    

#   publish-conda:
#     needs: [build-conda, test-conda]
#     runs-on: ubuntu-latest
#     if: github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    
#     steps:
#     - name: Setup Miniconda
#       uses: conda-incubator/setup-miniconda@v3
#       with:
#         auto-update-conda: true
#         python-version: '3.13'
#         channels: conda-forge,defaults
#         channel-priority: true
    
#     - name: Install anaconda-client
#       shell: bash -l {0}
#       run: |
#         conda install anaconda-client
    
#     - name: Download all conda artifacts
#       uses: actions/download-artifact@v3
#       with:
#         path: all-conda-dist/
    
#     - name: Upload to Anaconda Cloud
#       shell: bash -l {0}
#       run: |
#         anaconda login --token ${{ secrets.ANACONDA_TOKEN }}
        
#         # Upload packages from all platforms
#         for platform_dir in all-conda-dist/conda-packages-*; do
#           if [ -d "$platform_dir" ]; then
#             find "$platform_dir" -name "astrologics-*.tar.bz2" -exec anaconda upload {} --force \;
#           fi
#         done
        
#         anaconda logout
